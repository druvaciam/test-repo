print "dd"
print
print x
y = x + 5
> head(x)
x <- readLines(con)
con <- url("http://www.jhsph.edu", "r")
con <- url("http://www.jhsph.edu", "r")source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("submitscript1.R")
submit()
submit()
submit()
submit()
m <- c(ID = c(34, 35), count = c(15, 333))
m
m <- list(ID = c(34, 35), count = c(15, 333))
m
m <- matrix(ID = c(34, 35), count = c(15, 333), 2, 2)
m <- factor(ID = c(34, 35), count = c(15, 333))
m <- facror(c(5, 55))
m <- factor(c(5, 55))
m
m <- data.frame(ID = c(354, 355), count = c(24, 6))
m
id <- c(55, 56)
count <- c(25, 4)
m <- data.frame(ID = id, count = count)
m
count <- c(25, NA)
m <- data.frame(ID = id, count = count)
complete.cases(m)
good <- complete.cases(m)
m[good]
length(good == TRUE)
length(good)
m
good
class(good)
sum(good, na.rm=TRUE)
complete <- function(directory, id = 1:332) {
  ## 'directory' is a character vector of length 1 indicating
  ## the location of the CSV files
  ## 'id' is an integer vector indicating the monitor ID numbers
  ## to be used
  ## Return a data frame of the form:
  ## id nobs
  ## 1  117
  ## 2  1041
  ## ...
  ## where 'id' is the monitor ID number and 'nobs' is the
  ## number of complete cases
  nobs <- c()
  for(i in id) {
    te <- formatC(i, width=3, flag="0")
    te1 = paste(te, "csv", sep = ".")
    filename = paste(directory, te1, sep = "/")
    datebyID <- read.csv(filename, header = T)
    good <- complete.cases(datebyID)
    corcount <- sum(good, na.rm=TRUE)
    nobs <- c(nobs, corcount)
  }
  data.frame(ID = id, nobs = nobs)
}
source("complete.R")
source("complete.R")source("complete.R")
source("complete.R")
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
submit()
submit()
submit()
complete("specdata")
length(complete("specdata"))
com <- complete("specdata")[[2]]
good <- com > 0
sum(good)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
cr
summary(cr)
numeric()
class(numeric())
nuln <- numeric()
length(nuln)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
length(cr)
cr
corr <- function(directory, threshold = 0) {
  ## 'directory' is a character vector of length 1 indicating
  ## the location of the CSV files
  ## 'threshold' is a numeric vector of length 1 indicating the
  ## number of completely observed observations (on all
  ## variables) required to compute the correlation between
  ## nitrate and sulfate; the default is 0
  ## Return a numeric vector of correlations
  completeres <- complete(directory)
  isabove <- completeres > threshold
}
corr("specdata", 400)
corr <- function(directory, threshold = 0) {
  ## 'directory' is a character vector of length 1 indicating
  ## the location of the CSV files
  ## 'threshold' is a numeric vector of length 1 indicating the
  ## number of completely observed observations (on all
  ## variables) required to compute the correlation between
  ## nitrate and sulfate; the default is 0
  ## Return a numeric vector of correlations
  completeres <- complete(directory)
  isabove <- completeres > threshold
isabove
}
corr("specdata", 400)
corr <- function(directory, threshold = 0) {
  completeres <- complete(directory)
  isabove <- completeres[[2]] > threshold
isabove}
corr("specdata", 400)
length(corr("specdata", 400))
sum(corr("specdata", 400))
corr <- function(directory, threshold = 0) {
  completeres <- complete(directory)
  isabove <- completeres[[2]] > threshold
  aboveIDs <- completeres[[1]][isabove]
  aboveIDs}
corr("specdata", 400)
m
m  <- data.frame(ID = id, count = count)
m
count <- c(25, 28)
m  <- data.frame(ID = id, count = count)
cor(m)
summary(cor(m))
set.seed(1234)
X <- rep(c("A","B"),20)
x
X
Y <- sample(c("C","D"),40,replace=T)
Y
class(Y)
class(X)
table(X,Y)
chisq.test(table(X,Y),correct=F)
Data <- as.data.frame(
          matrix(
            sample(letters[1:3],2000,replace=T),
            ncol=25
          )
        )
Data
columns <- c(3,7,11,24)
vars <- names(Data)[columns]
vars
columns <- c(3,7,11,24)
vars <- names(Data)[columns]
set.seed(10)
x = as.data.frame(matrix(rnorm(100), ncol = 10))
x$L1 = letters[1:10]
x$L2 = letters[11:20]
x
cor(x[sapply(x, is.numeric)])
te <- formatC(2, width=3, flag="0")
te
te1 = paste(te, "csv", sep = ".")
filename = paste("specdata", te1, sep = "/")
datebyID <- read.csv(filename, header = T)
good <- complete.cases(datebyID)
datebyID[good]
datebyID
good
datebyID[good]
datebyID[[good]]
datebyID[good,]
sn <- data.frame(datebyID[good,][["sulfate"]],datebyID[good,][["nitrate"]])
sn
cor(sn)
cr <- cor(sn)
summary(cr)
class(cr)
cr(1:2)
cr[1:2]
summary(cr[1:2])
class(cr[1:2])
dd <- datebyID[good,]
ccr <- (dd[c("sulfate", "nitrate")])
ccr
ccr <- cor(dd[c("sulfate", "nitrate")])
ccr
class(ccr)
ccr[2]
class(ccr[2])
source("corr.R")
source("complete.R")
cr <- corr("specdata", 5000)
cr
summary(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
submit()
submit()
submit()
install.packages("swirl")
R.version.string
library(swirl)
swirl()
install.packages("swirl")
library(swirl)
library("swirl")
q()
